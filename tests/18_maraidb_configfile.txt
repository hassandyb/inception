Sure, I can provide a simpler explanation of what you need to know about the `50-server.cnf` configuration file and what the lines in the file mean.

### Basics of the Configuration File
The `50-server.cnf` file is used to configure how the MariaDB server behaves. It contains various settings that can be adjusted to control the server's functionality, performance, and security. The settings are organized into sections, which are indicated by lines with square brackets, like `[server]`.

### Key Sections and Their Purpose

1. **[server]**
   - This section is read by all types of MariaDB servers.
   - It includes general settings that apply universally.

2. **[mariadbd]**
   - This section is specific to the MariaDB daemon (`mariadbd`).
   - Use it for settings that only apply to the standalone MariaDB server process.

3. **[embedded]**
   - This section is for embedded servers, which are used when MariaDB is integrated into an application as a library.

4. **[mariadb]**
   - This section is for settings that apply only to MariaDB servers (not MySQL).
   - Useful for configurations specific to MariaDB.

5. **[mariadb-11.4]**
   - This section is for settings specific to MariaDB version 11.4.
   - Ensures that settings only compatible with this version are applied.

### Important Settings

Here are some of the key settings you might encounter in the `50-server.cnf` file, with simple explanations:

- **user**: Specifies the system user that the MariaDB server runs as. Usually, it's `mysql`.
- **pid-file**: Path to the file that stores the process ID of the MariaDB server. Useful for managing the server process.
- **basedir**: The base directory where MariaDB is installed.
- **datadir**: Directory where the database files are stored.
- **tmpdir**: Directory for temporary files.
- **skip-name-resolve**: Disables DNS lookups for client connections. Can improve performance.
- **bind-address**: IP address that the MariaDB server listens on. `127.0.0.1` means it only listens on localhost.
- **key_buffer_size**: Size of the buffer used for index blocks for MyISAM tables.
- **max_allowed_packet**: Maximum size of a query packet that the server can handle.
- **log_error**: Path to the error log file.
- **log_slow_query_file**: Path to the slow query log file, which records queries that take a long time to execute.
- **expire_logs_days**: Number of days to keep binary logs before automatically deleting them.
- **character-set-server**: Default character set for the server. `utf8mb4` supports all Unicode characters.
- **innodb_buffer_pool_size**: Size of the buffer pool for InnoDB tables. Should be set to a large value, typically 80% of your system's RAM.

### Example Lines Explained

```ini
#user                    = mysql
pid-file                = /run/mysqld/mysqld.pid
basedir                 = /usr
datadir                 = /var/lib/mysql
tmpdir                  = /tmp
skip-name-resolve
bind-address            = 127.0.0.1
```

- **#user = mysql**: Commented out (inactive) setting that specifies the `mysql` user.
- **pid-file = /run/mysqld/mysqld.pid**: Active setting that specifies where the process ID file is stored.
- **basedir = /usr**: Directory where MariaDB is installed.
- **datadir = /var/lib/mysql**: Directory where database files are stored.
- **tmpdir = /tmp**: Directory for temporary files.
- **skip-name-resolve**: Active setting to disable DNS lookups for clients.
- **bind-address = 127.0.0.1**: The server listens only on the localhost IP address.

### What You Should Know

1. **Sections**: Understand which section each setting belongs to and what part of MariaDB it affects.
2. **Common Settings**: Familiarize yourself with common settings like data directories, log files, and performance-related options.
3. **Customization**: You can customize these settings based on your server's hardware, usage patterns, and security requirements.
4. **Restart Required**: After making changes to the configuration file, you usually need to restart the MariaDB server for the changes to take effect.

Understanding and tweaking these settings can help you optimize and secure your MariaDB server according to your needs.